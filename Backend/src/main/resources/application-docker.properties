#H2 Database
# Configurate  H2 - Mode file
spring.datasource.url=jdbc:h2:file:./database/security-monitoring;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=${BD_USERNAME}
spring.datasource.password=${BD_PASSWORD}
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.h2.console.settings.webAllowOthers=true
# Enable console web h2 to debug
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

#Encrypt/Decryption Configuration
secret.key.aes=${SECRET_KEY_AES}
public.key.rsa=${PUBLIC_KEY_RSA}
private.key.rsa=${PRIVATE_KEY_RSA}

# JWT
secret.key.jwt=${SECRET_KEY_JWT}
jwt.expiration.time.min=30

# Config Security
default.empty.password=${DEFAULT_EMPTY_PASSWORD}

# Pool Hikari
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.pool-name=pool-hikari-security-monitoring

# Config
alertmanager.smtp.host=${ALERT_SMTP_HOST}
alertmanager.smtp.from=${ALERT_SMTP_FROM}
alertmanager.smtp.user=${ALERT_SMTP_USER}
alertmanager.smtp.password=${ALERT_SMTP_PASSWORD}
alertmanager.smtp.to=${ALERT_SMTP_TO}
alertmanager.smtp.port=${ALERT_SMTP_PORT}

url.server.deploy=${URL_SERVER_DEPLOY}



# Configuración para el entorno Docker
app.shared.volume.path=/app/docker/integraciones_security_monitoring/
# Rutas basadas en la variable de volumen
app.prometheus.template.path=${app.shared.volume.path}prometheus.template.yml
app.prometheus.output.path=${app.shared.volume.path}prometheus.yml
# Configuración AlertManager
app.alertmanager.template.path=${app.shared.volume.path}alertmanager/alertmanager.template.yml
app.alertmanager.output.path=${app.shared.volume.path}alertmanager/alertmanager.yml
# Ruta de Docker Compose
app.docker.compose.path=${app.shared.volume.path}docker-compose.yml
